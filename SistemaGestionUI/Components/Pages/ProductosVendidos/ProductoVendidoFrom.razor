@inject NavigationManager NavigationManager
@inject ProductoVendidoService producVenService
@inject ProductosService pruductoService
@inject VentasServices ventaService
<EditForm Model="ProductoVendido" OnValidSubmit="CrearOActualizarProductoVendido" FormName="usuario-form">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="pprvendido-producto">Producto</label>
        <InputSelect class="form-control" id="pprvendido-producto" @bind-Value="ProductoVendido.IdProducto">
            @foreach (var producto in Productos)
            {
                <option value="@producto.Id">@producto.Descripcion</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="pprvendido-stock">Stock</label>
        <InputNumber type="number" class="form-control" id="pprvendido-stock" @bind-Value="ProductoVendido.Stock" />
    </div>
    <div class="form-group">
        <label for="pprvendido-venta">Ventas</label>
        <InputSelect class="form-control" id="pprvendido-venta" @bind-Value="ProductoVendido.IdVenta">
            @foreach (var venta in Ventas)
            {
                <option value="@venta.Id">@venta.Comentario</option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary mt-5">Guardar</button>
</EditForm>

@code {
    [Parameter]
    public ProductoVendido ProductoVendido { get; set; } = new ProductoVendido();
    public List<Producto> Productos { get; set; } = new List<Producto>();
    public List<Venta> Ventas { get; set; } = new List<Venta>();

    protected override async Task OnInitializedAsync()
    {
        Productos = await pruductoService.GetProducts();
        Ventas = await ventaService.GetVentas();
    }
    public async Task CrearOActualizarProductoVendido()
    {
        if (ProductoVendido.Id > 0)
        {
            await producVenService.UpdateProductoVendido(ProductoVendido.Id ,ProductoVendido);
        }
        else
        {
            await producVenService.CreateProductoVendido(ProductoVendido);
        }

        NavigationManager.NavigateTo("/ProductoVendidos");
    }
}